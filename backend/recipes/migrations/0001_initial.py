# Generated by Django 3.2.13 on 2022-06-22 10:57

import django.core.validators
import django.db.models.deletion
import django.db.models.expressions
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('name', models.CharField(
                    max_length=100,
                    verbose_name='Название'
                )),
                ('measurement_unit', models.CharField(
                    max_length=30,
                    verbose_name='Ед. измерения'
                )),
            ],
            options={
                'verbose_name': 'Ингридиент',
                'verbose_name_plural': 'Ингридиенты',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('name', models.CharField(
                    max_length=200,
                    verbose_name='Название'
                )),
                ('text', models.TextField(
                    max_length=500,
                    verbose_name='Описание'
                )),
                ('created_at', models.DateTimeField(
                    auto_now_add=True
                )),
                ('image', models.ImageField(
                    null=True,
                    upload_to='',
                    verbose_name='Изображение'
                )),
                ('cooking_time', models.IntegerField(
                    validators=[django.core.validators.MinValueValidator(1)],
                    verbose_name='Время готовки, мин'
                )),
                ('author', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='recipes',
                    to=settings.AUTH_USER_MODEL,
                    verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('name', models.CharField(
                    max_length=30,
                    unique=True,
                    verbose_name='Название'
                )),
                ('color', models.CharField(
                    default='#000000',
                    max_length=7,
                    unique=True,
                    verbose_name='Цветовой код')),
                ('slug', models.SlugField(
                    unique=True,
                    verbose_name='slug'
                )),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.CreateModel(
            name='Shopping',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('recipe', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='shopping_cards',
                    to='recipes.recipe',
                    verbose_name='Рецепт'
                )),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='shopping_cards',
                    to=settings.AUTH_USER_MODEL,
                    verbose_name='Пользователь'
                )),
            ],
            options={
                'verbose_name': 'Рецепт в корзине',
                'verbose_name_plural': 'Рецепты в корзине',
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredientQty',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('amount', models.IntegerField(
                    verbose_name='Количество в рецепте'
                )),
                ('ingredient', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='recipes.ingredient',
                    verbose_name='Ингридиент'
                )),
                ('recipe', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    to='recipes.recipe',
                    verbose_name='Рецепт'
                )),
            ],
            options={
                'verbose_name': 'Ингридиент рецепта',
                'verbose_name_plural': 'Ингридиенты рецепта',
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(
                through='recipes.RecipeIngredientQty',
                to='recipes.Ingredient',
                verbose_name='Ингридиенты'
            ),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(
                related_name='recipes',
                to='recipes.Tag',
                verbose_name='Теги'
            ),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('author', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='followers',
                    to=settings.AUTH_USER_MODEL,
                    verbose_name='Автор, на которого подписались'
                )),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='followings',
                    to=settings.AUTH_USER_MODEL,
                    verbose_name='Подписчик'
                )),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки на авторов',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(
                    auto_created=True,
                    primary_key=True,
                    serialize=False,
                    verbose_name='ID'
                )),
                ('recipe', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='favorites',
                    to='recipes.recipe',
                    verbose_name='Рецепт'
                )),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='favorites',
                    to=settings.AUTH_USER_MODEL,
                    verbose_name='Пользователь'
                )),
            ],
            options={
                'verbose_name': 'Избранный рецепт',
                'verbose_name_plural': 'Избранные рецепты',
            },
        ),
        migrations.AddConstraint(
            model_name='recipeingredientqty',
            constraint=models.UniqueConstraint(
                fields=('recipe', 'ingredient'),
                name='unique_recipe_ingredient'
            ),
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.UniqueConstraint(
                fields=('user', 'author'),
                name='unique_follows'
            ),
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.CheckConstraint(
                check=models.Q((
                    'user',
                    django.db.models.expressions.F('author')
                ), _negated=True),
                name='restric_self_follow'
            ),
        ),
    ]
